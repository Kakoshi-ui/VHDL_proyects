library IEEE;
  use IEEE.STD_LOGIC_1164.all;
  use IEEE.STD_LOGIC_UNSIGNED.all;

entity prom_initials is
  port (addr : in  std_logic_vector(3 downto 0);
        M    : out std_logic_vector(39 downto 0));
end entity;

architecture Behavioral of prom_initials is
  type rom_array is array (NATURAL range <>) of std_logic_vector(39 downto 0);
  constant rom : rom_array := (
	"0000001110000011000000001100000111111000",--0
	"0000001110000011100000001100001111111100",--1
	"0000011111000001100000011100011000000000",--2
	"0000011011000001100000011000110000000000",--3
	"0000011011000001100000011000110000000000",--4
	"0000110011100000110000011001110000000000",--5
	"0000110001100000110000110001100000000000",--6
	"0000110001100000110000110001100001111100",--7
	"0001100001110000011000110001100000011100",--8
	"0001100000110000011001100001100000001100",--9
	"0001111111110000011001100001110000001100",--A
	"0011111111111000001101100000110000001100",--B
	"0011000000011000001111000000111000001100",--C
	"0011000000011000001111000000011110011100",--D
	"0110000000011100000111000000001111111000",--E
	"0000000000000000000000000000000000000000" --F
  );
  --Un "0" pixel apagado
  --Un "1" Pixel encendido
begin
  process (addr)
    variable j : integer;
  begin
    j := conv_integer(addr);
    M <= rom(j);
  end process;
end architecture;
